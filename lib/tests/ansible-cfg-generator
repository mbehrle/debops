#!/usr/bin/env python3

# Copyright (C) 2023 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2023 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-or-later

# This script will create the 'ansible.cfg' file in the current directory.
# It should be used in the DebOps monorepo via 'make ansible.cfg' command.

import hashlib
import os

# Path to the user's home dir
DEBOPS_USER_HOME_DIR = os.path.expanduser('~')


def unexpanduser(path):
    """Replace the absolute path of the home directory with '~'

    This function will replace the full path of the home directory with the '~'
    shorthand, but only if it is present at the start of the absolute path.
    This workaround is needed in cases where home directory string can be
    encountered inside of the path, for example if home directory is symlinked
    from a different place in the filesystem."""
    if path.startswith(DEBOPS_USER_HOME_DIR):
        return path.replace(DEBOPS_USER_HOME_DIR, '~', 1)
    else:
        return path


# Ref: https://github.com/ansible/ansible-compat/blob/main/src/ansible_compat/prerun.py
def get_cache_dir(project_dir: str) -> str:
    """Compute cache directory to be used based on project path."""
    # we only use the basename instead of the full path in order to ensure that
    # we would use the same key regardless the location of the user home
    # directory or where the project is clones (as long the project folder uses
    # the same name).
    basename = os.path.basename(os.path.abspath(project_dir)).encode(encoding="utf-8")
    # 6 chars of entropy should be enough
    cache_key = hashlib.sha256(basename).hexdigest()[:6]
    cache_dir = (
        os.getenv("XDG_CACHE_HOME", os.path.expanduser("~/.cache"))
        + "/ansible-compat/" + cache_key
    )
    return cache_dir


collections_path = (
        unexpanduser(get_cache_dir(os.getcwd())) + '/collections'
        + ':ansible/collections'  # DebOps monorepo
        + ':~/.ansible/collections'
        + ':/usr/share/ansible/collections')

content = '''# Generated by lib/tests/ansible-cfg-generator
# This file is used by ansible-lint and ansible-playbook
# to find correct paths to Ansible Collections, used during linting

[defaults]

# Missing Collections will be installed in the first directory
# specified on the list
collections_path = {}'''.format(collections_path)

if not os.path.exists('ansible.cfg'):
    with open('ansible.cfg', 'w') as fh:
        fh.writelines(content)
